{"ast":null,"code":"import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\nfunction createPair(key, value, ctx) {\n  const k = createNode(key, undefined, ctx);\n  const v = createNode(value, undefined, ctx);\n  return new Pair(k, v);\n}\nclass Pair {\n  constructor(key, value = null) {\n    Object.defineProperty(this, NODE_TYPE, {\n      value: PAIR\n    });\n    this.key = key;\n    this.value = value;\n  }\n  clone(schema) {\n    let key = this.key,\n      value = this.value;\n    if (isNode(key)) key = key.clone(schema);\n    if (isNode(value)) value = value.clone(schema);\n    return new Pair(key, value);\n  }\n  toJSON(_, ctx) {\n    const pair = ctx?.mapAsMap ? new Map() : {};\n    return addPairToJSMap(ctx, pair, this);\n  }\n  toString(ctx, onComment, onChompKeep) {\n    return ctx?.doc ? stringifyPair(this, ctx, onComment, onChompKeep) : JSON.stringify(this);\n  }\n}\nexport { Pair, createPair };","map":null,"metadata":{},"sourceType":"module"}