{"ast":null,"code":"'use strict';\n\nconst ansiEscapes = require('ansi-escapes');\n\n/**\n * Move cursor left by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexports.left = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorBackward(x));\n};\n\n/**\n * Move cursor right by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexports.right = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorForward(x));\n};\n\n/**\n * Move cursor up by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go up (default to 1)\n */\n\nexports.up = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorUp(x));\n};\n\n/**\n * Move cursor down by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go down (default to 1)\n */\n\nexports.down = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorDown(x));\n};\n\n/**\n * Clear current line\n * @param  {Readline} rl  - Readline instance\n * @param  {Number}   len - number of line to delete\n */\nexports.clearLine = function (rl, len) {\n  rl.output.write(ansiEscapes.eraseLines(len));\n};","map":null,"metadata":{},"sourceType":"script"}