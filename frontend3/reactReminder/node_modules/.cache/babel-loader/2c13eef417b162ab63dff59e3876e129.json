{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasMessage = exports.isBillingError = exports.getError = exports.getErrStatus = exports.isObject = exports.getErrStack = exports.getErrMsg = exports.FirebaseError = void 0;\nconst lodash_1 = require(\"lodash\");\nconst DEFAULT_CHILDREN = [];\nconst DEFAULT_EXIT = 1;\nconst DEFAULT_STATUS = 500;\nclass FirebaseError extends Error {\n  constructor(message, options = {}) {\n    super();\n    this.name = \"FirebaseError\";\n    this.children = (0, lodash_1.defaultTo)(options.children, DEFAULT_CHILDREN);\n    this.context = options.context;\n    this.exit = (0, lodash_1.defaultTo)(options.exit, DEFAULT_EXIT);\n    this.message = message;\n    this.original = options.original;\n    this.status = (0, lodash_1.defaultTo)(options.status, DEFAULT_STATUS);\n  }\n}\nexports.FirebaseError = FirebaseError;\nfunction getErrMsg(err, defaultMsg) {\n  if (err instanceof Error) {\n    return err.message;\n  } else if (typeof err === \"string\") {\n    return err;\n  } else if (defaultMsg) {\n    return defaultMsg;\n  }\n  return JSON.stringify(err);\n}\nexports.getErrMsg = getErrMsg;\nfunction getErrStack(err) {\n  if (err instanceof Error) {\n    return err.stack || err.message;\n  }\n  return getErrMsg(err);\n}\nexports.getErrStack = getErrStack;\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\nexports.isObject = isObject;\nfunction getErrStatus(err, defaultStatus) {\n  if (isObject(err) && err.status && typeof err.status === \"number\") {\n    return err.status;\n  }\n  return defaultStatus || DEFAULT_STATUS;\n}\nexports.getErrStatus = getErrStatus;\nfunction getError(err) {\n  if (err instanceof Error) {\n    return err;\n  }\n  return Error(getErrMsg(err));\n}\nexports.getError = getError;\nfunction isBillingError(e) {\n  var _a, _b, _c, _d;\n  return !!((_d = (_c = (_b = (_a = e.context) === null || _a === void 0 ? void 0 : _a.body) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.details) === null || _d === void 0 ? void 0 : _d.find(d => {\n    var _a;\n    return ((_a = d.violations) === null || _a === void 0 ? void 0 : _a.find(v => v.type === \"serviceusage/billing-enabled\")) || d.reason === \"UREQ_PROJECT_BILLING_NOT_FOUND\";\n  }));\n}\nexports.isBillingError = isBillingError;\nconst hasMessage = e => !!(e === null || e === void 0 ? void 0 : e.message);\nexports.hasMessage = hasMessage;","map":null,"metadata":{},"sourceType":"script"}