{"ast":null,"code":"'use strict';\n\nconst chalk = require('chalk');\n\n/**\n * The paginator returns a subset of the choices if the list is too long.\n */\n\nclass Paginator {\n  /**\n   * @param {import(\"./screen-manager\")} [screen]\n   * @param {{isInfinite?: boolean}} [options]\n   */\n  constructor(screen, options = {}) {\n    const _options$isInfinite = options.isInfinite,\n      isInfinite = _options$isInfinite === void 0 ? true : _options$isInfinite;\n    this.lastIndex = 0;\n    this.screen = screen;\n    this.isInfinite = isInfinite;\n  }\n  paginate(output, active, pageSize) {\n    pageSize = pageSize || 7;\n    let lines = output.split('\\n');\n    if (this.screen) {\n      lines = this.screen.breakLines(lines);\n      active = lines.map(lineParts => lineParts.length).splice(0, active).reduce((a, b) => a + b, 0);\n      lines = lines.flat();\n    }\n\n    // Make sure there's enough lines to paginate\n    if (lines.length <= pageSize) {\n      return output;\n    }\n    const visibleLines = this.isInfinite ? this.getInfiniteLines(lines, active, pageSize) : this.getFiniteLines(lines, active, pageSize);\n    this.lastIndex = active;\n    return visibleLines.join('\\n') + '\\n' + chalk.dim('(Move up and down to reveal more choices)');\n  }\n  getInfiniteLines(lines, active, pageSize) {\n    if (this.pointer === undefined) {\n      this.pointer = 0;\n    }\n    const middleOfList = Math.floor(pageSize / 2);\n    // Move the pointer only when the user go down and limit it to the middle of the list\n    if (this.pointer < middleOfList && this.lastIndex < active && active - this.lastIndex < pageSize) {\n      this.pointer = Math.min(middleOfList, this.pointer + active - this.lastIndex);\n    }\n\n    // Duplicate the lines so it give an infinite list look\n    const infinite = [lines, lines, lines].flat();\n    const topIndex = Math.max(0, active + lines.length - this.pointer);\n    return infinite.splice(topIndex, pageSize);\n  }\n  getFiniteLines(lines, active, pageSize) {\n    let topIndex = active - pageSize / 2;\n    if (topIndex < 0) {\n      topIndex = 0;\n    } else if (topIndex + pageSize > lines.length) {\n      topIndex = lines.length - pageSize;\n    }\n    return lines.splice(topIndex, pageSize);\n  }\n}\nmodule.exports = Paginator;","map":null,"metadata":{},"sourceType":"script"}