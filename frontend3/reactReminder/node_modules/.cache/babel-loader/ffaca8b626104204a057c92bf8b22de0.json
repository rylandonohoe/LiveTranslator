{"ast":null,"code":"import { ref, remove, onValue, set, update } from 'firebase/database';\nexport const doLogin = async (username, database, handleUpdate) => {\n  const notifsRef = ref(database, '/notifs/' + username); // Use ref to create a reference\n\n  await remove(notifsRef);\n  onValue(notifsRef, snapshot => {\n    if (snapshot.exists()) {\n      handleUpdate(snapshot.val(), username); // Handle the update when data changes\n    }\n  });\n  console.log(\"hi\");\n};\nexport const doOffer = async (to, offer, database, username) => {\n  const notifsRef = ref(database, '/notifs/' + to); // Create a reference\n\n  // Set the 'offer' data\n  await set(notifsRef, {\n    type: 'offer',\n    from: username,\n    offer: JSON.stringify(offer)\n  });\n};\nexport const doAnswer = async (to, answer, database, username) => {\n  const notifsRef = ref(database, '/notifs/' + to); // Create a reference\n\n  // Update the 'answer' data\n  await update(notifsRef, {\n    type: 'answer',\n    from: username,\n    answer: JSON.stringify(answer)\n  });\n};\nexport const doLeaveNotif = async (to, database, username) => {\n  const notifsRef = ref(database, '/notifs/' + to); // Create a reference\n\n  // Update the 'leave' notification\n  await update(notifsRef, {\n    type: 'leave',\n    from: username\n  });\n};\nexport const doCandidate = async (to, candidate, database, username) => {\n  const notifsRef = ref(database, '/notifs/' + to); // Create a reference\n\n  // Update the 'candidate' data\n  await update(notifsRef, {\n    type: 'candidate',\n    from: username,\n    candidate: JSON.stringify(candidate)\n  });\n};","map":{"version":3,"names":["ref","remove","onValue","set","update","doLogin","username","database","handleUpdate","notifsRef","snapshot","exists","val","console","log","doOffer","to","offer","type","from","JSON","stringify","doAnswer","answer","doLeaveNotif","doCandidate","candidate"],"sources":["/Users/rianadutta/Downloads/mchacks12/LiveTranslator/frontend3/reactReminder/src/modules/FirebaseModule.js"],"sourcesContent":["\nimport { ref, remove, onValue, set, update } from 'firebase/database';\n\nexport const doLogin = async (username, database, handleUpdate) => {\n  const notifsRef = ref(database, '/notifs/' + username); // Use ref to create a reference\n  \n  await remove(notifsRef);\n\n  onValue(notifsRef, snapshot => {\n    if (snapshot.exists()) {\n      handleUpdate(snapshot.val(), username); // Handle the update when data changes\n    }\n  });\n  console.log(\"hi\")\n};\n\n\n\n\nexport const doOffer = async (to, offer, database, username) => {\n  const notifsRef = ref(database, '/notifs/' + to); // Create a reference\n\n  // Set the 'offer' data\n  await set(notifsRef, {\n    type: 'offer',\n    from: username,\n    offer: JSON.stringify(offer),\n  });\n};\n\nexport const doAnswer = async (to, answer, database, username) => {\n  const notifsRef = ref(database, '/notifs/' + to); // Create a reference\n\n  // Update the 'answer' data\n  await update(notifsRef, {\n    type: 'answer',\n    from: username,\n    answer: JSON.stringify(answer),\n  });\n};\n\nexport const doLeaveNotif = async (to, database, username) => {\n  const notifsRef = ref(database, '/notifs/' + to); // Create a reference\n\n  // Update the 'leave' notification\n  await update(notifsRef, {\n    type: 'leave',\n    from: username,\n  });\n};\n\nexport const doCandidate = async (to, candidate, database, username) => {\n  const notifsRef = ref(database, '/notifs/' + to); // Create a reference\n\n  // Update the 'candidate' data\n  await update(notifsRef, {\n    type: 'candidate',\n    from: username,\n    candidate: JSON.stringify(candidate),\n  });\n};"],"mappings":"AACA,SAASA,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEC,GAAG,EAAEC,MAAM,QAAQ,mBAAmB;AAErE,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,KAAK;EACjE,MAAMC,SAAS,GAAGT,GAAG,CAACO,QAAQ,EAAE,UAAU,GAAGD,QAAQ,CAAC,CAAC,CAAC;;EAExD,MAAML,MAAM,CAACQ,SAAS,CAAC;EAEvBP,OAAO,CAACO,SAAS,EAAEC,QAAQ,IAAI;IAC7B,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;MACrBH,YAAY,CAACE,QAAQ,CAACE,GAAG,CAAC,CAAC,EAAEN,QAAQ,CAAC,CAAC,CAAC;IAC1C;EACF,CAAC,CAAC;EACFO,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;AACnB,CAAC;AAKD,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,EAAE,EAAEC,KAAK,EAAEV,QAAQ,EAAED,QAAQ,KAAK;EAC9D,MAAMG,SAAS,GAAGT,GAAG,CAACO,QAAQ,EAAE,UAAU,GAAGS,EAAE,CAAC,CAAC,CAAC;;EAElD;EACA,MAAMb,GAAG,CAACM,SAAS,EAAE;IACnBS,IAAI,EAAE,OAAO;IACbC,IAAI,EAAEb,QAAQ;IACdW,KAAK,EAAEG,IAAI,CAACC,SAAS,CAACJ,KAAK;EAC7B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAG,MAAAA,CAAON,EAAE,EAAEO,MAAM,EAAEhB,QAAQ,EAAED,QAAQ,KAAK;EAChE,MAAMG,SAAS,GAAGT,GAAG,CAACO,QAAQ,EAAE,UAAU,GAAGS,EAAE,CAAC,CAAC,CAAC;;EAElD;EACA,MAAMZ,MAAM,CAACK,SAAS,EAAE;IACtBS,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAEb,QAAQ;IACdiB,MAAM,EAAEH,IAAI,CAACC,SAAS,CAACE,MAAM;EAC/B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOR,EAAE,EAAET,QAAQ,EAAED,QAAQ,KAAK;EAC5D,MAAMG,SAAS,GAAGT,GAAG,CAACO,QAAQ,EAAE,UAAU,GAAGS,EAAE,CAAC,CAAC,CAAC;;EAElD;EACA,MAAMZ,MAAM,CAACK,SAAS,EAAE;IACtBS,IAAI,EAAE,OAAO;IACbC,IAAI,EAAEb;EACR,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMmB,WAAW,GAAG,MAAAA,CAAOT,EAAE,EAAEU,SAAS,EAAEnB,QAAQ,EAAED,QAAQ,KAAK;EACtE,MAAMG,SAAS,GAAGT,GAAG,CAACO,QAAQ,EAAE,UAAU,GAAGS,EAAE,CAAC,CAAC,CAAC;;EAElD;EACA,MAAMZ,MAAM,CAACK,SAAS,EAAE;IACtBS,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAEb,QAAQ;IACdoB,SAAS,EAAEN,IAAI,CAACC,SAAS,CAACK,SAAS;EACrC,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}