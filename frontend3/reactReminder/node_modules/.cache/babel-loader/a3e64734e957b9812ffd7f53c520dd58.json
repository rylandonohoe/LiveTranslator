{"ast":null,"code":"import * as tty from \"tty\";\nconst _ref = typeof process === \"undefined\" ? {} : process,\n  _ref$env = _ref.env,\n  env = _ref$env === void 0 ? {} : _ref$env,\n  _ref$argv = _ref.argv,\n  argv = _ref$argv === void 0 ? [] : _ref$argv,\n  _ref$platform = _ref.platform,\n  platform = _ref$platform === void 0 ? \"\" : _ref$platform;\nconst isDisabled = \"NO_COLOR\" in env || argv.includes(\"--no-color\");\nconst isForced = \"FORCE_COLOR\" in env || argv.includes(\"--color\");\nconst isWindows = platform === \"win32\";\nconst isDumbTerminal = env.TERM === \"dumb\";\nconst isCompatibleTerminal = tty && tty.isatty && tty.isatty(1) && env.TERM && !isDumbTerminal;\nconst isCI = \"CI\" in env && (\"GITHUB_ACTIONS\" in env || \"GITLAB_CI\" in env || \"CIRCLECI\" in env);\nexport const isColorSupported = !isDisabled && (isForced || isWindows && !isDumbTerminal || isCompatibleTerminal || isCI);\nconst replaceClose = (index, string, close, replace, head = string.substring(0, index) + replace, tail = string.substring(index + close.length), next = tail.indexOf(close)) => head + (next < 0 ? tail : replaceClose(next, tail, close, replace));\nconst clearBleed = (index, string, open, close, replace) => index < 0 ? open + string + close : open + replaceClose(index, string, close, replace) + close;\nconst filterEmpty = (open, close, replace = open, at = open.length + 1) => string => string || !(string === \"\" || string === undefined) ? clearBleed((\"\" + string).indexOf(close, at), string, open, close, replace) : \"\";\nconst init = (open, close, replace) => filterEmpty(\"\\x1B[\".concat(open, \"m\"), \"\\x1B[\".concat(close, \"m\"), replace);\nconst colors = {\n  reset: init(0, 0),\n  bold: init(1, 22, \"\\x1b[22m\\x1b[1m\"),\n  dim: init(2, 22, \"\\x1b[22m\\x1b[2m\"),\n  italic: init(3, 23),\n  underline: init(4, 24),\n  inverse: init(7, 27),\n  hidden: init(8, 28),\n  strikethrough: init(9, 29),\n  black: init(30, 39),\n  red: init(31, 39),\n  green: init(32, 39),\n  yellow: init(33, 39),\n  blue: init(34, 39),\n  magenta: init(35, 39),\n  cyan: init(36, 39),\n  white: init(37, 39),\n  gray: init(90, 39),\n  bgBlack: init(40, 49),\n  bgRed: init(41, 49),\n  bgGreen: init(42, 49),\n  bgYellow: init(43, 49),\n  bgBlue: init(44, 49),\n  bgMagenta: init(45, 49),\n  bgCyan: init(46, 49),\n  bgWhite: init(47, 49),\n  blackBright: init(90, 39),\n  redBright: init(91, 39),\n  greenBright: init(92, 39),\n  yellowBright: init(93, 39),\n  blueBright: init(94, 39),\n  magentaBright: init(95, 39),\n  cyanBright: init(96, 39),\n  whiteBright: init(97, 39),\n  bgBlackBright: init(100, 49),\n  bgRedBright: init(101, 49),\n  bgGreenBright: init(102, 49),\n  bgYellowBright: init(103, 49),\n  bgBlueBright: init(104, 49),\n  bgMagentaBright: init(105, 49),\n  bgCyanBright: init(106, 49),\n  bgWhiteBright: init(107, 49)\n};\nexport const createColors = ({\n  useColor = isColorSupported\n} = {}) => useColor ? colors : Object.keys(colors).reduce((colors, key) => ({\n  ...colors,\n  [key]: String\n}), {});\nconst _createColors = createColors(),\n  reset = _createColors.reset,\n  bold = _createColors.bold,\n  dim = _createColors.dim,\n  italic = _createColors.italic,\n  underline = _createColors.underline,\n  inverse = _createColors.inverse,\n  hidden = _createColors.hidden,\n  strikethrough = _createColors.strikethrough,\n  black = _createColors.black,\n  red = _createColors.red,\n  green = _createColors.green,\n  yellow = _createColors.yellow,\n  blue = _createColors.blue,\n  magenta = _createColors.magenta,\n  cyan = _createColors.cyan,\n  white = _createColors.white,\n  gray = _createColors.gray,\n  bgBlack = _createColors.bgBlack,\n  bgRed = _createColors.bgRed,\n  bgGreen = _createColors.bgGreen,\n  bgYellow = _createColors.bgYellow,\n  bgBlue = _createColors.bgBlue,\n  bgMagenta = _createColors.bgMagenta,\n  bgCyan = _createColors.bgCyan,\n  bgWhite = _createColors.bgWhite,\n  blackBright = _createColors.blackBright,\n  redBright = _createColors.redBright,\n  greenBright = _createColors.greenBright,\n  yellowBright = _createColors.yellowBright,\n  blueBright = _createColors.blueBright,\n  magentaBright = _createColors.magentaBright,\n  cyanBright = _createColors.cyanBright,\n  whiteBright = _createColors.whiteBright,\n  bgBlackBright = _createColors.bgBlackBright,\n  bgRedBright = _createColors.bgRedBright,\n  bgGreenBright = _createColors.bgGreenBright,\n  bgYellowBright = _createColors.bgYellowBright,\n  bgBlueBright = _createColors.bgBlueBright,\n  bgMagentaBright = _createColors.bgMagentaBright,\n  bgCyanBright = _createColors.bgCyanBright,\n  bgWhiteBright = _createColors.bgWhiteBright;\nexport { reset, bold, dim, italic, underline, inverse, hidden, strikethrough, black, red, green, yellow, blue, magenta, cyan, white, gray, bgBlack, bgRed, bgGreen, bgYellow, bgBlue, bgMagenta, bgCyan, bgWhite, blackBright, redBright, greenBright, yellowBright, blueBright, magentaBright, cyanBright, whiteBright, bgBlackBright, bgRedBright, bgGreenBright, bgYellowBright, bgBlueBright, bgMagentaBright, bgCyanBright, bgWhiteBright };","map":null,"metadata":{},"sourceType":"module"}