{"ast":null,"code":"'use strict';\n\nconst _require = require('rxjs'),\n  from = _require.from,\n  of = _require.of;\nconst runAsync = require('run-async');\n\n/**\n * Resolve a question property value if it is passed as a function.\n * This method will overwrite the property on the question object with the received value.\n * @param  {Object} question - Question object\n * @param  {String} prop     - Property to fetch name\n * @param  {Object} answers  - Answers object\n * @return {Rx.Observable}   - Observable emitting once value is known\n */\n\nexports.fetchAsyncQuestionProperty = function (question, prop, answers) {\n  if (typeof question[prop] !== 'function') {\n    return of(question);\n  }\n  return from(runAsync(question[prop])(answers).then(value => {\n    question[prop] = value;\n    return question;\n  }));\n};","map":null,"metadata":{},"sourceType":"script"}