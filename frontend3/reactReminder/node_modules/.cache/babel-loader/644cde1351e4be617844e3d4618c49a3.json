{"ast":null,"code":"var _jsxFileName = \"/Users/rianadutta/Downloads/mchacks12/LiveTranslator/frontend3/reactReminder/src/VideoChatContainer.js\";\nimport React from 'react';\nimport './App.css';\nimport { createOffer, initiateConnection, startCall, sendAnswer, addCandidate, initiateLocalStream, listenToConnectionEvents } from './modules/RTCModule';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase } from 'firebase/database';\nimport config from './config';\nimport { doOffer, doAnswer, doLogin, doCandidate } from './modules/FirebaseModule';\nimport VideoChat from './VideoChat';\nclass VideoChatContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.componentDidMount = async () => {\n      const app = initializeApp(config);\n      const database = getDatabase(app);\n      const localStream = await initiateLocalStream();\n      this.localVideoRef.current.srcObject = localStream;\n      const localConnection = await initiateConnection();\n      const socket = new WebSocket('ws://localhost:5000/audio');\n      socket.onopen = () => console.log('WebSocket connected');\n      socket.onerror = err => console.error('WebSocket error:', err);\n      socket.onclose = () => console.log('WebSocket closed');\n      this.setState({\n        database,\n        localStream,\n        localConnection,\n        socket\n      });\n      this.startAudioStream(socket, localStream);\n    };\n    this.startAudioStream = (socket, stream) => {\n      const audioContext = new AudioContext();\n      const source = audioContext.createMediaStreamSource(stream);\n      const processor = audioContext.createScriptProcessor(4096, 1, 1);\n      source.connect(processor);\n      processor.connect(audioContext.destination);\n      processor.onaudioprocess = event => {\n        if (socket.readyState === WebSocket.OPEN) {\n          const inputData = event.inputBuffer.getChannelData(0);\n          socket.send(inputData.buffer);\n        }\n      };\n    };\n    this.startCall = async (username, userToCall) => {\n      const _this$state = this.state,\n        localConnection = _this$state.localConnection,\n        database = _this$state.database,\n        localStream = _this$state.localStream;\n      listenToConnectionEvents(localConnection, username, userToCall, database, this.remoteVideoRef, doCandidate);\n      createOffer(localConnection, localStream, userToCall, doOffer, database, username);\n    };\n    this.onLogin = async username => {\n      return await doLogin(username, this.state.database, this.handleUpdate);\n    };\n    this.setLocalVideoRef = ref => {\n      this.localVideoRef = ref;\n    };\n    this.setRemoteVideoRef = ref => {\n      this.remoteVideoRef = ref;\n    };\n    this.handleUpdate = (notif, username) => {\n      const _this$state2 = this.state,\n        localConnection = _this$state2.localConnection,\n        database = _this$state2.database,\n        localStream = _this$state2.localStream;\n      if (notif) {\n        switch (notif.type) {\n          case 'offer':\n            this.setState({\n              connectedUser: notif.from\n            });\n            listenToConnectionEvents(localConnection, username, notif.from, database, this.remoteVideoRef, doCandidate);\n            sendAnswer(localConnection, localStream, notif, doAnswer, database, username);\n            break;\n          case 'answer':\n            this.setState({\n              connectedUser: notif.from\n            });\n            startCall(localConnection, notif);\n            break;\n          case 'candidate':\n            addCandidate(localConnection, notif);\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    this.state = {\n      database: null,\n      connectedUser: null,\n      localStream: null,\n      localConnection: null,\n      socket: null\n    };\n    this.localVideoRef = React.createRef();\n    this.remoteVideoRef = React.createRef();\n  }\n  render() {\n    return React.createElement(VideoChat, {\n      startCall: this.startCall,\n      onLogin: this.onLogin,\n      setLocalVideoRef: this.setLocalVideoRef,\n      setRemoteVideoRef: this.setRemoteVideoRef,\n      connectedUser: this.state.connectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    });\n  }\n}\nexport default VideoChatContainer;","map":{"version":3,"names":["React","createOffer","initiateConnection","startCall","sendAnswer","addCandidate","initiateLocalStream","listenToConnectionEvents","initializeApp","getDatabase","config","doOffer","doAnswer","doLogin","doCandidate","VideoChat","VideoChatContainer","Component","constructor","props","componentDidMount","app","database","localStream","localVideoRef","current","srcObject","localConnection","socket","WebSocket","onopen","console","log","onerror","err","error","onclose","setState","startAudioStream","stream","audioContext","AudioContext","source","createMediaStreamSource","processor","createScriptProcessor","connect","destination","onaudioprocess","event","readyState","OPEN","inputData","inputBuffer","getChannelData","send","buffer","username","userToCall","_this$state","state","remoteVideoRef","onLogin","handleUpdate","setLocalVideoRef","ref","setRemoteVideoRef","notif","_this$state2","type","connectedUser","from","createRef","render","createElement","__source","fileName","_jsxFileName","lineNumber","__self"],"sources":["/Users/rianadutta/Downloads/mchacks12/LiveTranslator/frontend3/reactReminder/src/VideoChatContainer.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n  createOffer,\n  initiateConnection,\n  startCall,\n  sendAnswer,\n  addCandidate,\n  initiateLocalStream,\n  listenToConnectionEvents,\n} from './modules/RTCModule';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase } from 'firebase/database';\nimport config from './config';\nimport { doOffer, doAnswer, doLogin, doCandidate } from './modules/FirebaseModule';\nimport VideoChat from './VideoChat';\n\nclass VideoChatContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: null,\n      connectedUser: null,\n      localStream: null,\n      localConnection: null,\n      socket: null,\n    };\n    this.localVideoRef = React.createRef();\n    this.remoteVideoRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    const app = initializeApp(config);\n    const database = getDatabase(app);\n\n    const localStream = await initiateLocalStream();\n    this.localVideoRef.current.srcObject = localStream;\n\n    const localConnection = await initiateConnection();\n\n    const socket = new WebSocket('ws://localhost:5000/audio');\n    socket.onopen = () => console.log('WebSocket connected');\n    socket.onerror = (err) => console.error('WebSocket error:', err);\n    socket.onclose = () => console.log('WebSocket closed');\n\n    this.setState({\n      database,\n      localStream,\n      localConnection,\n      socket,\n    });\n\n    this.startAudioStream(socket, localStream);\n  };\n\n  startAudioStream = (socket, stream) => {\n    const audioContext = new AudioContext();\n    const source = audioContext.createMediaStreamSource(stream);\n    const processor = audioContext.createScriptProcessor(4096, 1, 1);\n\n    source.connect(processor);\n    processor.connect(audioContext.destination);\n\n    processor.onaudioprocess = (event) => {\n      if (socket.readyState === WebSocket.OPEN) {\n        const inputData = event.inputBuffer.getChannelData(0);\n        socket.send(inputData.buffer);\n      }\n    };\n  };\n\n  startCall = async (username, userToCall) => {\n    const { localConnection, database, localStream } = this.state;\n    listenToConnectionEvents(localConnection, username, userToCall, database, this.remoteVideoRef, doCandidate);\n    createOffer(localConnection, localStream, userToCall, doOffer, database, username);\n  };\n\n  onLogin = async (username) => {\n    return await doLogin(username, this.state.database, this.handleUpdate);\n  };\n\n  setLocalVideoRef = (ref) => {\n    this.localVideoRef = ref;\n  };\n\n  setRemoteVideoRef = (ref) => {\n    this.remoteVideoRef = ref;\n  };\n\n  handleUpdate = (notif, username) => {\n    const { localConnection, database, localStream } = this.state;\n\n    if (notif) {\n      switch (notif.type) {\n        case 'offer':\n          this.setState({\n            connectedUser: notif.from,\n          });\n\n          listenToConnectionEvents(localConnection, username, notif.from, database, this.remoteVideoRef, doCandidate);\n\n          sendAnswer(localConnection, localStream, notif, doAnswer, database, username);\n          break;\n        case 'answer':\n          this.setState({\n            connectedUser: notif.from,\n          });\n          startCall(localConnection, notif);\n          break;\n        case 'candidate':\n          addCandidate(localConnection, notif);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <VideoChat\n        startCall={this.startCall}\n        onLogin={this.onLogin}\n        setLocalVideoRef={this.setLocalVideoRef}\n        setRemoteVideoRef={this.setRemoteVideoRef}\n        connectedUser={this.state.connectedUser}\n      />\n    );\n  }\n}\n\nexport default VideoChatContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}