{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\nconst path = require('path');\nconst copySync = require('../copy').copySync;\nconst removeSync = require('../remove').removeSync;\nconst mkdirpSync = require('../mkdirs').mkdirpSync;\nconst stat = require('../util/stat');\nfunction moveSync(src, dest, opts) {\n  opts = opts || {};\n  const overwrite = opts.overwrite || opts.clobber || false;\n  const _stat$checkPathsSync = stat.checkPathsSync(src, dest, 'move', opts),\n    srcStat = _stat$checkPathsSync.srcStat,\n    _stat$checkPathsSync$ = _stat$checkPathsSync.isChangingCase,\n    isChangingCase = _stat$checkPathsSync$ === void 0 ? false : _stat$checkPathsSync$;\n  stat.checkParentPathsSync(src, srcStat, dest, 'move');\n  if (!isParentRoot(dest)) mkdirpSync(path.dirname(dest));\n  return doRename(src, dest, overwrite, isChangingCase);\n}\nfunction isParentRoot(dest) {\n  const parent = path.dirname(dest);\n  const parsedPath = path.parse(parent);\n  return parsedPath.root === parent;\n}\nfunction doRename(src, dest, overwrite, isChangingCase) {\n  if (isChangingCase) return rename(src, dest, overwrite);\n  if (overwrite) {\n    removeSync(dest);\n    return rename(src, dest, overwrite);\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.');\n  return rename(src, dest, overwrite);\n}\nfunction rename(src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest);\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err;\n    return moveAcrossDevice(src, dest, overwrite);\n  }\n}\nfunction moveAcrossDevice(src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  };\n  copySync(src, dest, opts);\n  return removeSync(src);\n}\nmodule.exports = moveSync;","map":null,"metadata":{},"sourceType":"script"}