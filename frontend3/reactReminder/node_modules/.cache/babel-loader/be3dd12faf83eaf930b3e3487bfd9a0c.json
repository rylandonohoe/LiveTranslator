{"ast":null,"code":"var _jsxFileName = \"/Users/rianadutta/Downloads/mchacks12/LiveTranslator/frontend3/reactReminder/src/VideoChatContainer.js\";\nimport React from 'react';\nimport './App.css';\nimport { createOffer, initiateConnection, startCall, sendAnswer, addCandidate, initiateLocalStream, listenToConnectionEvents } from './modules/RTCModule';\nimport { initializeApp } from 'firebase/app'; // Import initializeApp from 'firebase/app'\nimport { getDatabase } from 'firebase/database';\nimport config from './config';\nimport { doOffer, doAnswer, doLogin, doCandidate } from './modules/FirebaseModule';\nimport 'webrtc-adapter';\nimport VideoChat from './VideoChat';\nclass VideoChatContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.componentDidMount = async () => {\n      const app = initializeApp(config);\n      const database = getDatabase(app); // Get the Realtime Database instance\n\n      // getting local video stream\n      const localStream = await initiateLocalStream();\n      this.localVideoRef.srcObject = localStream;\n      const localConnection = await initiateConnection();\n      this.setState({\n        database: database,\n        localStream,\n        localConnection\n      });\n    };\n    this.startCall = async (username, userToCall) => {\n      const _this$state = this.state,\n        localConnection = _this$state.localConnection,\n        database = _this$state.database,\n        localStream = _this$state.localStream;\n      listenToConnectionEvents(localConnection, username, userToCall, database, this.remoteVideoRef, doCandidate);\n      // create an offer\n      createOffer(localConnection, localStream, userToCall, doOffer, database, username);\n    };\n    this.onLogin = async username => {\n      return await doLogin(username, this.state.database, this.handleUpdate);\n    };\n    this.setLocalVideoRef = ref => {\n      this.localVideoRef = ref;\n    };\n    this.setRemoteVideoRef = ref => {\n      this.remoteVideoRef = ref;\n    };\n    this.handleUpdate = (notif, username) => {\n      const _this$state2 = this.state,\n        localConnection = _this$state2.localConnection,\n        database = _this$state2.database,\n        localStream = _this$state2.localStream;\n      if (notif) {\n        switch (notif.type) {\n          case 'offer':\n            this.setState({\n              connectedUser: notif.from\n            });\n            listenToConnectionEvents(localConnection, username, notif.from, database, this.remoteVideoRef, doCandidate);\n            sendAnswer(localConnection, localStream, notif, doAnswer, database, username);\n            break;\n          case 'answer':\n            this.setState({\n              connectedUser: notif.from\n            });\n            startCall(localConnection, notif);\n            break;\n          case 'candidate':\n            addCandidate(localConnection, notif);\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    this.state = {\n      database: null,\n      connectedUser: null,\n      localStream: null,\n      localConnection: null\n    };\n    this.localVideoRef = React.createRef();\n    this.remoteVideoRef = React.createRef();\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.database !== nextState.database) {\n      return false;\n    }\n    if (this.state.localStream !== nextState.localStream) {\n      return false;\n    }\n    if (this.state.localConnection !== nextState.localConnection) {\n      return false;\n    }\n    return true;\n  }\n  render() {\n    return React.createElement(VideoChat, {\n      startCall: this.startCall,\n      onLogin: this.onLogin,\n      setLocalVideoRef: this.setLocalVideoRef,\n      setRemoteVideoRef: this.setRemoteVideoRef,\n      connectedUser: this.state.connectedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    });\n  }\n}\nexport default VideoChatContainer;","map":{"version":3,"names":["React","createOffer","initiateConnection","startCall","sendAnswer","addCandidate","initiateLocalStream","listenToConnectionEvents","initializeApp","getDatabase","config","doOffer","doAnswer","doLogin","doCandidate","VideoChat","VideoChatContainer","Component","constructor","props","componentDidMount","app","database","localStream","localVideoRef","srcObject","localConnection","setState","username","userToCall","_this$state","state","remoteVideoRef","onLogin","handleUpdate","setLocalVideoRef","ref","setRemoteVideoRef","notif","_this$state2","type","connectedUser","from","createRef","shouldComponentUpdate","nextProps","nextState","render","createElement","__source","fileName","_jsxFileName","lineNumber","__self"],"sources":["/Users/rianadutta/Downloads/mchacks12/LiveTranslator/frontend3/reactReminder/src/VideoChatContainer.js"],"sourcesContent":["import React from 'react'\nimport './App.css'\nimport { createOffer, initiateConnection, startCall, sendAnswer, addCandidate, initiateLocalStream, listenToConnectionEvents } from './modules/RTCModule'\nimport { initializeApp } from 'firebase/app'; // Import initializeApp from 'firebase/app'\nimport { getDatabase } from 'firebase/database';\n\n\n\nimport config from './config'\nimport { doOffer, doAnswer, doLogin, doCandidate } from './modules/FirebaseModule'\nimport 'webrtc-adapter'\nimport VideoChat from './VideoChat'\n\nclass VideoChatContainer extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      database: null,\n      connectedUser: null,\n      localStream: null,\n      localConnection: null\n    }\n    this.localVideoRef = React.createRef()\n    this.remoteVideoRef = React.createRef()\n  }\n\n    componentDidMount = async () => {\n    const app = initializeApp(config);\n    const database = getDatabase(app); // Get the Realtime Database instance\n\n      // getting local video stream\n      const localStream = await initiateLocalStream()\n      this.localVideoRef.srcObject = localStream\n\n      const localConnection = await initiateConnection()\n\n      this.setState({\n        database: database,\n        localStream,\n        localConnection\n      })\n    }\n\n    shouldComponentUpdate (nextProps, nextState) {\n      if (this.state.database !== nextState.database) {\n        return false\n      }\n      if (this.state.localStream !== nextState.localStream) {\n        return false\n      }\n      if (this.state.localConnection !== nextState.localConnection) {\n        return false\n      }\n\n      return true\n    }\n\n    startCall = async (username, userToCall) => {\n      const { localConnection, database, localStream } = this.state\n      listenToConnectionEvents(localConnection, username, userToCall, database, this.remoteVideoRef, doCandidate)\n      // create an offer\n      createOffer(localConnection, localStream, userToCall, doOffer, database, username)\n    }\n\n    onLogin = async (username) => {\n      return await doLogin(username, this.state.database, this.handleUpdate)\n    }\n\n    setLocalVideoRef = ref => {\n      this.localVideoRef = ref\n    }\n\n    setRemoteVideoRef = ref => {\n      this.remoteVideoRef = ref\n    }\n\n    handleUpdate = (notif, username) => {\n      const { localConnection, database, localStream } = this.state\n\n      if (notif) {\n        switch (notif.type) {\n          case 'offer':\n            this.setState({\n              connectedUser: notif.from\n            })\n\n            listenToConnectionEvents(localConnection, username, notif.from, database, this.remoteVideoRef, doCandidate)\n\n            sendAnswer(localConnection, localStream, notif, doAnswer, database, username)\n            break\n          case 'answer':\n\n            this.setState({\n              connectedUser: notif.from\n            })\n            startCall(localConnection, notif)\n            break\n          case 'candidate':\n            addCandidate(localConnection, notif)\n            break\n          default:\n            break\n        }\n      }\n    }\n\n    render () {\n      return <VideoChat\n        startCall={this.startCall}\n        onLogin={this.onLogin}\n        setLocalVideoRef={this.setLocalVideoRef}\n        setRemoteVideoRef={this.setRemoteVideoRef}\n        connectedUser={this.state.connectedUser}\n      />\n    }\n}\n\nexport default VideoChatContainer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}