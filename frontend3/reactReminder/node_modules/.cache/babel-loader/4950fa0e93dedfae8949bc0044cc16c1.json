{"ast":null,"code":"'use strict';\n\n/**\n * `confirm` type prompt\n */\nconst chalk = require('chalk');\nconst _require = require('rxjs/operators'),\n  take = _require.take,\n  takeUntil = _require.takeUntil;\nconst Base = require('./base');\nconst observe = require('../utils/events');\nclass ConfirmPrompt extends Base {\n  constructor(questions, rl, answers) {\n    super(questions, rl, answers);\n    let rawDefault = true;\n    Object.assign(this.opt, {\n      filter(input) {\n        let value = rawDefault;\n        if (input != null && input !== '') {\n          value = /^y(es)?/i.test(input);\n        }\n        return value;\n      }\n    });\n    if (this.opt.default != null) {\n      rawDefault = Boolean(this.opt.default);\n    }\n    this.opt.default = rawDefault ? 'Y/n' : 'y/N';\n  }\n\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb   Callback when prompt is done\n   * @return {this}\n   */\n\n  _run(cb) {\n    this.done = cb;\n\n    // Once user confirm (enter key)\n    const events = observe(this.rl);\n    events.keypress.pipe(takeUntil(events.line)).forEach(this.onKeypress.bind(this));\n    events.line.pipe(take(1)).forEach(this.onEnd.bind(this));\n\n    // Init\n    this.render();\n    return this;\n  }\n\n  /**\n   * Render the prompt to screen\n   * @return {ConfirmPrompt} self\n   */\n\n  render(answer) {\n    let message = this.getQuestion();\n    if (typeof answer === 'boolean') {\n      message += chalk.cyan(answer ? 'Yes' : 'No');\n    } else {\n      message += this.rl.line;\n    }\n    this.screen.render(message);\n    return this;\n  }\n\n  /**\n   * When user press `enter` key\n   */\n\n  onEnd(input) {\n    this.status = 'answered';\n    const output = this.opt.filter(input);\n    this.render(output);\n    this.screen.done();\n    this.done(output);\n  }\n\n  /**\n   * When user press a key\n   */\n\n  onKeypress() {\n    this.render();\n  }\n}\nmodule.exports = ConfirmPrompt;","map":null,"metadata":{},"sourceType":"script"}